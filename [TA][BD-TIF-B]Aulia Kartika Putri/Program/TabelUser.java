/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coba;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.awt.Color;

/**
 *
 * @author Farah
 */
public class TabelUser extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public TabelUser() {
        initComponents();
        updData();
        btnSave.setEnabled(false); 
        btnCancel.setEnabled(false);
        FieldsEditabel(false);
        jTable1.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
            loadSelectedRowDataToFields(); 
        }
        ButSearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButSearchActionPerformed(evt);
        }
    });
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jTextField_Search = new javax.swing.JTextField();
        ButSearch = new javax.swing.JButton();
        ButFirst = new javax.swing.JButton();
        ButPrev = new javax.swing.JButton();
        ButNext = new javax.swing.JButton();
        ButLast = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField_userid = new javax.swing.JTextField();
        jTextField_username = new javax.swing.JTextField();
        jTextField_password = new javax.swing.JTextField();
        jTextField_phonenum = new javax.swing.JTextField();
        jTextField_email = new javax.swing.JTextField();
        btnBack = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(244, 194, 194));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID User", "Username", "Password", "Phone Number", "Email"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jTable1.setUpdateSelectionOnSort(false);
        jScrollPane1.setViewportView(jTable1);

        jTextField_Search.setToolTipText("Search Name");
        jTextField_Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_SearchActionPerformed(evt);
            }
        });

        ButSearch.setText("Search");
        ButSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButSearchActionPerformed(evt);
            }
        });

        ButFirst.setText("<<");
        ButFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButFirstActionPerformed(evt);
            }
        });

        ButPrev.setText("<");
        ButPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButPrevActionPerformed(evt);
            }
        });

        ButNext.setText(">");
        ButNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButNextActionPerformed(evt);
            }
        });

        ButLast.setText(">>");
        ButLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButLastActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel1.setText("ID User");

        jLabel2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel3.setText("Password");

        jLabel4.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel4.setText("Email");

        jLabel5.setFont(new java.awt.Font("Segoe UI Semibold", 0, 12)); // NOI18N
        jLabel5.setText("Phone Number");

        jTextField_userid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_useridActionPerformed(evt);
            }
        });

        btnBack.setText("<< back");
        btnBack.setContentAreaFilled(false);
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 436, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(ButSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(350, 350, 350)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_phonenum, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField_email))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(ButNext, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(ButLast, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(543, 543, 543)
                        .addComponent(btnCancel))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnNew)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGap(12, 12, 12)))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addGap(19, 19, 19)
                                            .addComponent(btnEdit)
                                            .addGap(18, 18, 18)
                                            .addComponent(btnDel))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(jTextField_password, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btnSave)
                                    .addGap(78, 78, 78))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, Short.MAX_VALUE)
                                    .addComponent(jTextField_userid, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(295, 295, 295))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                    .addGap(76, 76, 76)
                                    .addComponent(ButFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(28, 28, 28)
                                    .addComponent(ButPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 0, Short.MAX_VALUE))))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButFirst)
                    .addComponent(ButPrev)
                    .addComponent(ButNext)
                    .addComponent(ButLast))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5)
                    .addComponent(jTextField_userid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_phonenum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jTextField_username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextField_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnEdit)
                    .addComponent(btnDel)
                    .addComponent(btnSave)
                    .addComponent(btnCancel))
                .addGap(16, 16, 16)
                .addComponent(btnBack)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_SearchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_SearchActionPerformed

    private void ButLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButLastActionPerformed
    currentRow = jTable1.getRowCount() - 1;
    jTable1.setRowSelectionInterval(currentRow, currentRow); 
    updateFieldsTabel(); 
    updateTombol();         // TODO add your handling code here:
    }//GEN-LAST:event_ButLastActionPerformed

    private void jTextField_useridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_useridActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_useridActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        MenuAdmin menuadmin1 = new MenuAdmin();
        menuadmin1.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        toggleAdd = true;
        FieldsEditabel(true);
        clearTextFields(); 
        btnSave.setEnabled(true);       
        btnCancel.setEnabled(true);
    }//GEN-LAST:event_btnNewActionPerformed
    
    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        if (toggleAdd) { 
        String idUser = jTextField_userid.getText().trim();
        String username = jTextField_username.getText().trim();
        String password = jTextField_password.getText().trim();
        String phoneNumber = jTextField_phonenum.getText().trim();
        String email = jTextField_email.getText().trim();

       
        if (idUser.isEmpty() || username.isEmpty() || password.isEmpty() || phoneNumber.isEmpty() || email.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        String connectionUrl =
                "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        String insertQuery = "INSERT INTO Users (User_Id, username, password, phone_number, email) VALUES (?, ?, ?, ?, ?)";

        try (Connection connection = DriverManager.getConnection(connectionUrl);
             PreparedStatement s = connection.prepareStatement(insertQuery)) {

            
            s.setInt(1, Integer.parseInt(idUser));
            s.setString(2, username);
            s.setString(3, password);
            s.setString(4, phoneNumber);
            s.setString(5, email);

           
            s.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            
            toggleAdd = false;
            btnSave.setEnabled(false);
            btnCancel.setEnabled(false);
            jTextField_userid.setEditable(false);
            updData(); 
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }else if (toggleEdit) {
       
        updateData();
        
        }else if (toggleDel) { 
            String idUser = jTextField_userid.getText().trim();

            if (idUser.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih untuk dihapus.", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
        }

        String deleteQuery = "DELETE FROM Users WHERE User_Id = ?";
        String connectionUrl =
               "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        try (Connection connection = DriverManager.getConnection(connectionUrl);
             PreparedStatement statement = connection.prepareStatement(deleteQuery)) {

            
            statement.setInt(1, Integer.parseInt(idUser));

            
            statement.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            
            toggleDel = false;
            btnSave.setEnabled(false);
            btnCancel.setEnabled(false);
            resetTextFieldColors();
             btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnDel.setEnabled(true);
            updData(); 
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
        resetTextFieldColors();
        FieldsEditabel(false); 

    }//GEN-LAST:event_btnSaveActionPerformed

    private void ButNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButNextActionPerformed
        if (currentRow < jTable1.getRowCount() - 1) { 
        currentRow++;
        jTable1.setRowSelectionInterval(currentRow, currentRow); 
        updateFieldsTabel(); 
    }
    updateTombol(); 
    }//GEN-LAST:event_ButNextActionPerformed

    private void ButPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButPrevActionPerformed
    if (currentRow > 0) { 
        currentRow--;
        jTable1.setRowSelectionInterval(currentRow, currentRow); 
        updateFieldsTabel(); 
    }
    updateTombol(); 
    }//GEN-LAST:event_ButPrevActionPerformed

    private void ButFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButFirstActionPerformed
    currentRow = 0; 
    jTable1.setRowSelectionInterval(currentRow, currentRow); 
    updateFieldsTabel(); 
    updateTombol(); 
    }//GEN-LAST:event_ButFirstActionPerformed

    private void ButSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButSearchActionPerformed
        String searchQuery = jTextField_Search.getText().trim(); 
        String connectionUrl =
           "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";
    try (Connection connection = DriverManager.getConnection(connectionUrl);
         PreparedStatement statement = connection.prepareStatement(
                 searchQuery.isEmpty() ? "SELECT * FROM Users" : "SELECT * FROM Users WHERE username LIKE ?"
         )) {

        if (!searchQuery.isEmpty()) {
            statement.setString(1, "%" + searchQuery + "%"); 
        }

        try (ResultSet r = statement.executeQuery()) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); 

            while (r.next()) {
                
                Object[] row = {
                    r.getInt("User_Id"),
                    r.getString("username"),
                    r.getString("password"),
                    r.getString("phone_number"),
                    r.getString("email")
                };
                model.addRow(row);
            }

            if (model.getRowCount() > 0) {
                currentRow = 0; 
                jTable1.setRowSelectionInterval(currentRow, currentRow);
                updateFieldsTabel(); 
            } else {
                clearTextFields(); 
            }

            updateTombol();
        }
    } catch (SQLException e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencari data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_ButSearchActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        if (toggleAdd) { 
        toggleAdd = false; 
        btnSave.setEnabled(false); 
        btnCancel.setEnabled(false);
        jTextField_userid.setEditable(false); 

        
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            jTextField_userid.setText(jTable1.getValueAt(selectedRow, 0).toString());
            jTextField_username.setText(jTable1.getValueAt(selectedRow, 1).toString());
            jTextField_password.setText(jTable1.getValueAt(selectedRow, 2).toString());
            jTextField_phonenum.setText(jTable1.getValueAt(selectedRow, 3).toString());
            jTextField_email.setText(jTable1.getValueAt(selectedRow, 4).toString());
        } else {
            clearTextFields(); 
            }
        }else if (toggleEdit) {
        
        toggleEdit = false;
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);

        
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            jTextField_userid.setText(jTable1.getValueAt(selectedRow, 0).toString());
            jTextField_username.setText(jTable1.getValueAt(selectedRow, 1).toString());
            jTextField_password.setText(jTable1.getValueAt(selectedRow, 2).toString());
            jTextField_phonenum.setText(jTable1.getValueAt(selectedRow, 3).toString());
            jTextField_email.setText(jTable1.getValueAt(selectedRow, 4).toString());
        }
    }else if ((toggleDel)) {
        jTextField_userid.setForeground(Color.BLACK);
        jTextField_username.setForeground(Color.BLACK);
        jTextField_password.setForeground(Color.BLACK);
        jTextField_phonenum.setForeground(Color.BLACK);
        jTextField_email.setForeground(Color.BLACK);

       
        btnSave.setEnabled(false);
        btnCancel.setEnabled(false);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDel.setEnabled(true);

        toggleDel = false;
            
        }
    }//GEN-LAST:event_btnCancelActionPerformed
    private boolean toggleEdit = false;
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (jTable1.getSelectedRow() != -1) { 
            jTextField_userid.setForeground(Color.RED);
        jTextField_username.setForeground(Color.RED);
        jTextField_password.setForeground(Color.RED);
        jTextField_phonenum.setForeground(Color.RED);
        jTextField_email.setForeground(Color.RED);
        toggleEdit = true; 
        btnSave.setEnabled(true); 
        btnCancel.setEnabled(true); 
        FieldsEditabel(true);
        jTextField_userid.setEditable(false); 
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Silakan pilih data yang ingin diedit.", "Edit Data", javax.swing.JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnEditActionPerformed
private boolean toggleDel = false;
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        btnSave.setEnabled(true);
    btnCancel.setEnabled(true);

   
    btnNew.setEnabled(false);
    btnEdit.setEnabled(false);
    btnDel.setEnabled(false);

    
    jTextField_userid.setForeground(Color.RED);
    jTextField_username.setForeground(Color.RED);
    jTextField_password.setForeground(Color.RED);
    jTextField_phonenum.setForeground(Color.RED);
    jTextField_email.setForeground(Color.RED);

    toggleDel = true; 
    }//GEN-LAST:event_btnDelActionPerformed
    private void clearTextFields() {
        jTextField_userid.setText("");
        jTextField_username.setText("");
        jTextField_password.setText("");
        jTextField_phonenum.setText("");
        jTextField_email.setText("");
    }
    private void updateData() {
        String userId = jTextField_userid.getText().trim();
        String username = jTextField_username.getText().trim();
        String password = jTextField_password.getText().trim();
        String phoneNumber = jTextField_phonenum.getText().trim();
        String email = jTextField_email.getText().trim();

    if (username.isEmpty() || password.isEmpty() || phoneNumber.isEmpty() || email.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }

    String connectionUrl =
            "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";

    String updateQuery = "UPDATE Users SET username = ?, password = ?, phone_number = ?, email = ? WHERE User_Id = ?";

    try (Connection connection = DriverManager.getConnection(connectionUrl);
         PreparedStatement s = connection.prepareStatement(updateQuery)) {

        s.setString(1, username);
        s.setString(2, password);
        s.setString(3, phoneNumber);
        s.setString(4, email);
        s.setInt(5, Integer.parseInt(userId));

        int rowsUpdated = s.executeUpdate();
        if (rowsUpdated > 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            updData(); 
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Data gagal diperbarui.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memperbarui data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }

   
    toggleEdit = false;
    btnSave.setEnabled(false);
    btnCancel.setEnabled(false);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TabelUser().setVisible(true);
                String connectionUrl =
                "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        try {
           
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

           
            Connection connection = DriverManager.getConnection(connectionUrl);

            System.out.println("Koneksi berhasil!");

           
            connection.close();

        } catch (ClassNotFoundException e) {
            System.err.println("Driver tidak ditemukan: " + e.getMessage());
        } catch (SQLException e) {
            System.err.println("Koneksi gagal: " + e.getMessage());
        }
            }
        });
    }
    private boolean isNavigating = false; 
    ResultSet allRS;
    boolean isInserted;
    private int currentRow = 0; 
    private DefaultTableModel searchModel; 
    private boolean toggleAdd = false;
    
    private void updData() {
    String query = "SELECT * FROM Users"; 
    String connectionUrl =
            "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";
    try {
        Connection connection = DriverManager.getConnection(connectionUrl);
        PreparedStatement statement = connection.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        allRS = statement.executeQuery(); 

        
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 

        while (allRS.next()) {
            Object[] row = {
                allRS.getInt("User_Id"), 
                allRS.getString("username"),
                allRS.getString("password"),
                allRS.getString("phone_number"),
                allRS.getString("email")
            };
            model.addRow(row);
        }

       
        if (model.getRowCount() > 0) {
            allRS.first(); 
            loadSelectedRowDataToFields(); 
            
            ButPrev.setEnabled(false);
            ButFirst.setEnabled(false);
            ButNext.setEnabled(true);
            ButLast.setEnabled(true);
        }

    } catch (SQLException e) {
        System.err.println("Error saat mengisi tabel: " + e.getMessage());
    }
    
}
    private void loadSelectedRowDataToFields() {
    try {
        
        if (allRS != null && !allRS.isAfterLast() && !allRS.isBeforeFirst()) {
            jTextField_userid.setText(allRS.getString("User_Id")); // ID User
            jTextField_username.setText(allRS.getString("username")); // Username
            jTextField_password.setText(allRS.getString("password")); // Password
            jTextField_phonenum.setText(allRS.getString("phone_number")); // Phone Number
            jTextField_email.setText(allRS.getString("email")); // Email
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
}
    private void resetTextFieldColors() {
    jTextField_userid.setForeground(Color.BLACK);
    jTextField_username.setForeground(Color.BLACK);
    jTextField_password.setForeground(Color.BLACK);
    jTextField_phonenum.setForeground(Color.BLACK);
    jTextField_email.setForeground(Color.BLACK);
}   
    private void updateTombol() {
    ButNext.setEnabled(currentRow < jTable1.getRowCount() - 1);
    ButPrev.setEnabled(currentRow > 0);
    ButLast.setEnabled(currentRow < jTable1.getRowCount() - 1);
    ButFirst.setEnabled(currentRow > 0);
}
    private void updateFieldsTabel() {
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        jTextField_userid.setText(jTable1.getValueAt(selectedRow, 0).toString());
        jTextField_username.setText(jTable1.getValueAt(selectedRow, 1).toString());
        jTextField_password.setText(jTable1.getValueAt(selectedRow, 2).toString());
        jTextField_phonenum.setText(jTable1.getValueAt(selectedRow, 3).toString());
        jTextField_email.setText(jTable1.getValueAt(selectedRow, 4).toString());
    }
}
    private void FieldsEditabel(boolean editable) {
    jTextField_userid.setEditable(editable);
    jTextField_username.setEditable(editable);
    jTextField_password.setEditable(editable);
    jTextField_phonenum.setEditable(editable);
    jTextField_email.setEditable(editable);
}


    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButFirst;
    private javax.swing.JButton ButLast;
    private javax.swing.JButton ButNext;
    private javax.swing.JButton ButPrev;
    private javax.swing.JButton ButSearch;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_Search;
    private javax.swing.JTextField jTextField_email;
    private javax.swing.JTextField jTextField_password;
    private javax.swing.JTextField jTextField_phonenum;
    private javax.swing.JTextField jTextField_userid;
    private javax.swing.JTextField jTextField_username;
    // End of variables declaration//GEN-END:variables
}
