/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package coba;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;
import java.sql.ResultSet;
import java.sql.PreparedStatement;
import java.awt.Color;


/**
 *
 * @author glady
 */
public class DetailPesanan extends javax.swing.JFrame {

    /**
     * Creates new form DetailPesanan
     */
    public DetailPesanan() {
        initComponents();
        tampilTable();
        ButLast.setEnabled(true);        
        btnCancel.setEnabled(false);
        setTextFieldsEditable(false);
        jTable1.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting() && jTable1.getSelectedRow() != -1) {
            barisTerpilihKeField(); 
        }
        ButSearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            ButSearchActionPerformed(evt);
        }
    });
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        ButSearch = new javax.swing.JButton();
        jTextField_Search = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        ButFirst = new javax.swing.JButton();
        ButPrev = new javax.swing.JButton();
        ButNext = new javax.swing.JButton();
        ButLast = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField2_orderid = new javax.swing.JTextField();
        jTextField3_foodid = new javax.swing.JTextField();
        btnEdit = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDel = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(244, 194, 194));

        ButSearch.setText("Search");
        ButSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButSearchActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null}
            },
            new String [] {
                "Order_ID", "Food_ID"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        ButFirst.setText("<<");
        ButFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButFirstActionPerformed(evt);
            }
        });

        ButPrev.setText("<");
        ButPrev.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButPrevActionPerformed(evt);
            }
        });

        ButNext.setText(">");
        ButNext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButNextActionPerformed(evt);
            }
        });

        ButLast.setText(">>");
        ButLast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButLastActionPerformed(evt);
            }
        });

        jLabel1.setText("OrderID");

        jLabel2.setText("FoodID");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDel.setText("Delete");
        btnDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelActionPerformed(evt);
            }
        });

        jButton9.setText("Save");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        jButton1.setText("<< back");
        jButton1.setContentAreaFilled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnNew)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEdit)
                .addGap(18, 18, 18)
                .addComponent(btnDel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancel)
                .addGap(18, 18, 18))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jTextField2_orderid, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField3_foodid, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ButSearch))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(ButFirst)
                                .addGap(36, 36, 36)
                                .addComponent(ButPrev, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)
                                .addComponent(ButNext, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ButLast))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 439, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField_Search, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButSearch))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButFirst)
                    .addComponent(ButPrev)
                    .addComponent(ButNext)
                    .addComponent(ButLast))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTextField2_orderid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3_foodid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnNew)
                    .addComponent(btnEdit)
                    .addComponent(btnDel)
                    .addComponent(jButton9)
                    .addComponent(btnCancel))
                .addGap(36, 36, 36)
                .addComponent(jButton1)
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButSearchActionPerformed
        String queryCari = jTextField_Search.getText().trim();
        String connectionUrl =
           "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";
    try (Connection connection = DriverManager.getConnection(connectionUrl);
         PreparedStatement statement = connection.prepareStatement(queryCari.isEmpty() ? "SELECT * FROM Detail_Pesanan" : "SELECT * FROM Detail_Pesanan WHERE order_id LIKE ?"
         )) {

        if (!queryCari.isEmpty()) {
            statement.setString(1, "%" + queryCari + "%"); // Menggunakan wildcard untuk pencarian
        }

        try (ResultSet resultSet = statement.executeQuery()) {
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            model.setRowCount(0); // Kosongkan tabel sebelum menampilkan hasil baru

            while (resultSet.next()) {
                // Tambahkan hasil ke JTable
                Object[] row = {
                    resultSet.getInt("order_id"),
                    resultSet.getString("food_id"),
                
                };
                model.addRow(row);
            }

            if (model.getRowCount() > 0) {
                cur_Row = 0; // Reset ke baris pertama
                jTable1.setRowSelectionInterval(cur_Row, cur_Row);
                updateFieldsDariTable(); // Perbarui JTextField berdasarkan hasil pertama
            } else {
                hapusFields(); // Kosongkan JTextField jika tidak ada data
            }

            updTombolUtkNav(); // Perbarui tombol navigasi
        }
    } catch (SQLException e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat mencari data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }        // TODO add your handling code here:
    }//GEN-LAST:event_ButSearchActionPerformed

    private void ButPrevActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButPrevActionPerformed
        if (cur_Row > 0) { // Pastikan tidak melewati baris pertama
        cur_Row--;
        jTable1.setRowSelectionInterval(cur_Row, cur_Row); // Pilih baris sebelumnya
        updateFieldsDariTable(); // Perbarui JTextField berdasarkan baris
    }
    updTombolUtkNav(); // Perbarui status tombol navigasi
    }//GEN-LAST:event_ButPrevActionPerformed

    private void ButFirstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButFirstActionPerformed
    cur_Row = 0; // Baris pertama
    jTable1.setRowSelectionInterval(cur_Row, cur_Row); // Pilih baris pertama
    updateFieldsDariTable(); // Perbarui JTextField
    updTombolUtkNav(); // Perbarui status tombol navigasi        // TODO add your handling code here:
    }//GEN-LAST:event_ButFirstActionPerformed

    private void ButLastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButLastActionPerformed
        cur_Row = jTable1.getRowCount() - 1; // Baris terakhir
        jTable1.setRowSelectionInterval(cur_Row, cur_Row); // Pilih baris terakhir
        updateFieldsDariTable(); // Perbarui JTextField
        updTombolUtkNav(); // Perbarui status tombol navigasi        // TODO add your handling code here:
    }//GEN-LAST:event_ButLastActionPerformed

    private void ButNextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButNextActionPerformed
        if (cur_Row < jTable1.getRowCount() - 1) { // Pastikan tidak melewati baris terakhir
        cur_Row++;
        jTable1.setRowSelectionInterval(cur_Row, cur_Row); // Pilih baris berikutnya
        updateFieldsDariTable(); // Perbarui JTextField berdasarkan baris
    }
    updTombolUtkNav(); // Perbarui status tombol navigasi
    }//GEN-LAST:event_ButNextActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
if (toggleAdd) { // Jika dalam mode penambahan data baru
        String idOrder = jTextField2_orderid.getText().trim();
        String idFood = jTextField3_foodid.getText().trim();
        
        if (idOrder.isEmpty() || idFood.isEmpty()) {
            javax.swing.JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
            return;
        }

        String connectionUrl =
                "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        String queryInput = "INSERT INTO Detail_Pesanan (order_id, food_id) VALUES (?, ?, ?, ?, ?)";

        try (Connection connection = DriverManager.getConnection(connectionUrl);
             PreparedStatement statemnt = connection.prepareStatement(queryInput)) {


            statemnt.setInt(1, Integer.parseInt(idOrder));
            statemnt.setString(2, idFood);

            statemnt.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan!", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            toggleAdd = false;
            ButLast.setEnabled(false);
            btnCancel.setEnabled(false);
            jTextField2_orderid.setEditable(false);
            tampilTable();
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menambahkan data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }else if (toggleEdit) {
        updateData();
        
        }else if (toggleDel) { // Jika dalam mode delete
            String order_id = jTextField2_orderid.getText().trim();

            if (order_id.isEmpty()) {
                javax.swing.JOptionPane.showMessageDialog(this, "Tidak ada data yang dipilih untuk dihapus.", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
                return;
        }

        String queryHapus = "DELETE FROM Detail_Pesanan WHERE order_id = ?";
        String connectionUrl =
               "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        try (Connection connection = DriverManager.getConnection(connectionUrl);
             PreparedStatement statemnt = connection.prepareStatement(queryHapus)) {

            // Set parameter SQL
            statemnt.setInt(1, Integer.parseInt(order_id));

            // Eksekusi query
            statemnt.executeUpdate();
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil dihapus!", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);

            // Reset status dan perbarui tabel
            toggleDel = false;
            ButLast.setEnabled(false);
            btnCancel.setEnabled(false);
            resetWarnaTextField();
             btnNew.setEnabled(true);
            btnEdit.setEnabled(true);
            btnDel.setEnabled(true);
            tampilTable(); // Memuat ulang data di tabel
        } catch (SQLException e) {
            e.printStackTrace();
            javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat menghapus data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
        resetWarnaTextField();
        setTextFieldsEditable(false); 

    }//GEN-LAST:event_jButton9ActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
         if (toggleAdd) { // Hanya berlaku jika sedang dalam mode penambahan data
        toggleAdd = false; // Batalkan mode penambahan data
        ButLast.setEnabled(false); // Nonaktifkan tombol Save
        btnCancel.setEnabled(false); // Nonaktifkan tombol Cancel
        jTextField2_orderid.setEditable(false); // Kunci kembali kolom ID User

        // Kembalikan data JTextField sesuai baris yang saat ini dipilih di tabel
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            jTextField2_orderid.setText(jTable1.getValueAt(selectedRow, 0).toString());
            jTextField3_foodid.setText(jTable1.getValueAt(selectedRow, 1).toString());
        } else {
            hapusFields(); // Jika tidak ada baris yang dipilih, kosongkan JTextField
            }
        }else if (toggleEdit) {
        // Logika untuk membatalkan pengeditan data
        toggleEdit = false;
        ButLast.setEnabled(false);
        btnCancel.setEnabled(false);

        // Kembalikan data JTextField sesuai baris yang saat ini dipilih di tabel
        int selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1) {
            jTextField2_orderid.setText(jTable1.getValueAt(selectedRow, 0).toString());
            jTextField3_foodid.setText(jTable1.getValueAt(selectedRow, 1).toString());
        }
    }else if ((toggleDel)) {
        jTextField2_orderid.setForeground(Color.BLACK);
        jTextField3_foodid.setForeground(Color.BLACK);

        // Reset tombol dan kembalikan ke kondisi awal
        ButLast.setEnabled(false);
        btnCancel.setEnabled(false);
        btnNew.setEnabled(true);
        btnEdit.setEnabled(true);
        btnDel.setEnabled(true);

        toggleDel = false;
            
        }
    }//GEN-LAST:event_btnCancelActionPerformed
private boolean toggleEdit = false;
    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if (jTable1.getSelectedRow() != -1) { // Pastikan ada baris yang dipilih
        jTextField2_orderid.setForeground(Color.RED);
        jTextField3_foodid.setForeground(Color.RED);
        toggleEdit = true; // Aktifkan mode edit
        ButLast.setEnabled(true); // Aktifkan tombol Save
        btnCancel.setEnabled(true); // Aktifkan tombol Cancel
        setTextFieldsEditable(true);
        jTextField2_orderid.setEditable(false); // ID User tidak dapat diubah
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Silakan pilih data yang ingin diedit.", "Edit Data", javax.swing.JOptionPane.WARNING_MESSAGE);
    }
    }//GEN-LAST:event_btnEditActionPerformed
private boolean toggleDel = false;
    private void btnDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelActionPerformed
        ButLast.setEnabled(true);
    btnCancel.setEnabled(true);

    // Nonaktifkan tombol lain
    btnNew.setEnabled(false);
    btnEdit.setEnabled(false);
    btnDel.setEnabled(false);

    // Ubah warna teks pada JTextField menjadi merah
    jTextField2_orderid.setForeground(Color.RED);
    jTextField3_foodid.setForeground(Color.RED);
  
    toggleDel = true; // Tandai bahwa mode delete sedang aktif
    }//GEN-LAST:event_btnDelActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
      toggleAdd = true; // Aktifkan mode penambahan data baru
        setTextFieldsEditable(true);
        hapusFields(); // Kosongkan semua JTextField
        ButLast.setEnabled(true); // Aktifkan tombol Save        
        btnCancel.setEnabled(true);
    }//GEN-LAST:event_btnNewActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        MenuAdmin menuadmin1 = new MenuAdmin();
        menuadmin1.setVisible(true);
        this.dispose();        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed
  private void hapusFields() {
       jTextField2_orderid.setText("");
       jTextField3_foodid.setText("");
    }
    private void updateData() {
        String foodId = jTextField3_foodid.getText().trim();
        String orderId = jTextField2_orderid.getText().trim();
       
    if (foodId.isEmpty() || orderId.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "Semua kolom harus diisi!", "Peringatan", javax.swing.JOptionPane.WARNING_MESSAGE);
        return;
    }

    String connectionUrl =
            "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";

    String queryUpd = "UPDATE Detail_Pesanan SET order_id = ?,food_id = ?";

    try (Connection connection = DriverManager.getConnection(connectionUrl);
         PreparedStatement statemnt = connection.prepareStatement(queryUpd)) {

        statemnt.setString(1, orderId);
        statemnt.setString(2, foodId);
        
        int rowsUpdated = statemnt.executeUpdate();
        if (rowsUpdated > 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Data berhasil diperbarui.", "Sukses", javax.swing.JOptionPane.INFORMATION_MESSAGE);
            tampilTable(); // Refresh data di tabel
        } else {
            javax.swing.JOptionPane.showMessageDialog(this, "Data gagal diperbarui.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }

    } catch (SQLException e) {
        e.printStackTrace();
        javax.swing.JOptionPane.showMessageDialog(this, "Terjadi kesalahan saat memperbarui data.", "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
    }

    // Kembali ke mode normal
    toggleEdit = false;
    ButLast.setEnabled(false);
    btnCancel.setEnabled(false);
}
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TabelUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DetailPesanan().setVisible(true);
                String connectionUrl =
                "jdbc:sqlserver://GLADYSABELVG:1433;" +
                "database=SAMFOOD;" +
                "user=Gladys Abel;" +
                "password=231525;" +
                "encrypt=true;" +
                "trustServerCertificate=true;" +
                "loginTimeout=30;";
        try {
            // Load the JDBC driver (optional for newer Java versions)
            Class.forName("com.microsoft.sqlserver.jdbc.SQLServerDriver");

            // Create the connection
            Connection connection = DriverManager.getConnection(connectionUrl);

            System.out.println("Koneksi berhasil!");

            // Close the connection (optional)
            connection.close();

        } catch (ClassNotFoundException e) {
            System.err.println("Driver tidak ditemukan: " + e.getMessage());
        } catch (SQLException e) {
            System.err.println("Koneksi gagal: " + e.getMessage());
        }
            }
        });
    }
    private boolean isNavigating = false; 
    ResultSet allRS;
    boolean isInserted;
    private int cur_Row = 0; 
    private DefaultTableModel searchModel; 
    private boolean toggleAdd = false;
    
    private void tampilTable() {
    String query = "SELECT * FROM Detail_Pesanan"; 
    String connectionUrl =
            "jdbc:sqlserver://GLADYSABELVG:1433;" +
            "database=SAMFOOD;" +
            "user=Gladys Abel;" +
            "password=231525;" +
            "encrypt=true;" +
            "trustServerCertificate=true;" +
            "loginTimeout=30;";
    try {
        Connection connection = DriverManager.getConnection(connectionUrl);
        PreparedStatement statemnt = connection.prepareStatement(query, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
        allRS = statemnt.executeQuery();

        // Model untuk JTable
        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0); 

        while (allRS.next()) {
            Object[] row = {
                allRS.getInt("order_id"), 
                allRS.getString("food_id"),
                
            };
            model.addRow(row);
        }

        if (model.getRowCount() > 0) {
            allRS.first(); 
            barisTerpilihKeField(); 
            
            ButPrev.setEnabled(false);
            ButFirst.setEnabled(false);
            ButNext.setEnabled(true);
            ButLast.setEnabled(true);
        }

    } catch (SQLException e) {
        System.err.println("Error saat mengisi tabel: " + e.getMessage());
    }
    
}
    private void barisTerpilihKeField() {
    try {

        if (allRS != null && !allRS.isAfterLast() && !allRS.isBeforeFirst()) {
            jTextField2_orderid.setText(allRS.getString("Order_Id")); // ID User
            jTextField3_foodid.setText(allRS.getString("Food_Id")); // Username
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
}
    private void resetWarnaTextField() {
    jTextField2_orderid.setForeground(Color.BLACK);
    jTextField3_foodid.setForeground(Color.BLACK);
}   
    private void updTombolUtkNav() {
    ButNext.setEnabled(cur_Row < jTable1.getRowCount() - 1);
    ButPrev.setEnabled(cur_Row > 0);
    ButLast.setEnabled(cur_Row < jTable1.getRowCount() - 1);
    ButFirst.setEnabled(cur_Row > 0);
}
    private void updateFieldsDariTable() {
    int selectedRow = jTable1.getSelectedRow();
    if (selectedRow != -1) {
        jTextField2_orderid.setText(jTable1.getValueAt(selectedRow, 0).toString());
        jTextField3_foodid.setText(jTable1.getValueAt(selectedRow, 1).toString());
    }
}
    private void setTextFieldsEditable(boolean editable) {
    jTextField2_orderid.setEditable(editable);
    jTextField3_foodid.setEditable(editable);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButFirst;
    private javax.swing.JButton ButLast;
    private javax.swing.JButton ButNext;
    private javax.swing.JButton ButPrev;
    private javax.swing.JButton ButSearch;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnDel;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField2_orderid;
    private javax.swing.JTextField jTextField3_foodid;
    private javax.swing.JTextField jTextField_Search;
    // End of variables declaration//GEN-END:variables

    
}